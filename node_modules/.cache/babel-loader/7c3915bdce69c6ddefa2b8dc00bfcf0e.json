{"remainingRequest":"C:\\Vue\\video-record\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Vue\\video-record\\node_modules\\babel-loader\\lib\\index.js!C:\\Vue\\video-record\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Vue\\video-record\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Vue\\video-record\\node_modules\\multicorder\\vuetify_ui\\src\\components\\MulticorderUI.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Vue\\video-record\\node_modules\\multicorder\\vuetify_ui\\src\\components\\MulticorderUI.vue","mtime":499162500000},{"path":"C:\\Vue\\video-record\\babel.config.js","mtime":1663961902174},{"path":"C:\\Vue\\video-record\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Vue\\video-record\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Vue\\video-record\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Vue\\video-record\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Vue\\video-record\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CgovKioKICogRm9yIEhvdCByZWxvYWQgbG9hZCB0aGUgYCoudnVlYCBmaWxlcyBmcm9tIHRoZSBwYXJlbnQgYC9zcmMvYCBkaXJlY3RseS4KICovCmltcG9ydCB7IE11bHRpY29yZGVyIH0gZnJvbSAibXVsdGljb3JkZXIiOyAvLyBpbXBvcnQgeyBNdWx0aWNvcmRlciB9IGZyb20gIi4uLy4uLy4uL3NyYy9saWItY29tcG9uZW50cy9pbmRleC5qcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk11bHRpY29yZGVyVUkiLAogIGNvbXBvbmVudHM6IHsKICAgIE11bHRpY29yZGVyCiAgfSwKICBwcm9wczogewogICAgdmlkZW9UeXBlczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiBbImNhbWVyYSIsICJzY3JlZW4iXTsKICAgICAgfQogICAgfSwKICAgIHJlY29yZGVyTW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJzaW5nbGUiCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRyb2xzOiBudWxsLAogICAgICB2aWRlb1NvdXJjZTogbnVsbCwKICAgICAgdmlkZW9Tb3VyY2VMaXN0OiBbXSwKICAgICAgaXNQYXVzZWQ6IGZhbHNlLAogICAgICBpc1BsYXllclBhdXNlZDogZmFsc2UsCiAgICAgIGlzTXV0ZWQ6IHRydWUsCiAgICAgIGlzUGxheWVyTXV0ZWQ6IHRydWUsCiAgICAgIHZpZXc6ICJ2aWRlbyIsCiAgICAgIHJlY29yZGluZ3M6IFtdIC8vIGxvY2FsIHNwYXJzZWQgbGlzdCBvZiByZWNvcmRpbmcgZGF0YQoKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgb25FcnJvcihlcnJvcikgewogICAgICBjb25zb2xlLmxvZygiRXJyb3IgZW1pdHRlZCIsIGVycm9yKTsKICAgIH0sCgogICAgb25DYW1lcmFzKGNhbWVyYXMpIHsKICAgICAgY29uc29sZS5sb2coIkF2YWlsYWJsZSBjYW1lcmFzIiwgY2FtZXJhcyk7CiAgICAgIC8qKgogICAgICAgKiBXZSBhcmUgaW1wbGVtZW50aW5nIGEgYG11bHRpY29yZGVyYCB3aXRoIGNhbWVyYSBhbmQgc2NyZWVuIHN1cHBvcnQuCiAgICAgICAqIFdlIG5lZWQgdG8gY3JlYXRlIGEgbGlzdCB0aGF0IGdyb3VwcyB0aGUgaXRlbXMgZm9yIGEgYHYtc2VsZWN0YCBjb21wb25lbnQuCiAgICAgICAqIFdlIHVzZSB0aGUgYGxpc3RGcm9tQ2FtZXJhc2AgaGVscGVyIGZ1bmN0aW9uIHByb3ZpZGVkIGJ5IHRoZSBjb21wb25lbnQuCiAgICAgICAqIFRoZSBNdWx0aWNvcmRlciBjb21wb25lbnQgbWFpbnRhaW5zIGEgbGlzdCBvZiBgY2FtZXJhc2AgaWYgd2UgbmVlZCB0aGVtIGluZGVwZW5kZW50bHkuCiAgICAgICAqLwoKICAgICAgdGhpcy52aWRlb1NvdXJjZUxpc3QgPSB0aGlzLiRyZWZzLm11bHRpY29yZGVyLmxpc3RGcm9tQ2FtZXJhcyhjYW1lcmFzKTsKICAgIH0sCgogICAgb25WaWRlb0xpdmUoKSB7CiAgICAgIHRoaXMuY29udHJvbHMgPSAibGl2ZVZpZGVvIjsKICAgIH0sCgogICAgb25WaWV3Q2hhbmdlKHZpZXcpIHsKICAgICAgdGhpcy52aWV3ID0gdmlldzsKICAgIH0sCgogICAgb25OZXdSZWNvcmRpbmcocmVjb3JkaW5nKSB7CiAgICAgIHRoaXMucmVjb3JkaW5ncy5wdXNoKHJlY29yZGluZyk7CgogICAgICBpZiAodGhpcy5yZWNvcmRlck1vZGUgPT0gInNpbmdsZSIpIHsKICAgICAgICAvLyBMb2FkIHRoZSB2aWRlbyBpbnRvIHRoZSBwbGF5ZXIgYW5kIGZvcmNlIGRpc3Bvc2l0aW9uCiAgICAgICAgLy8gdGhpcy52aWV3ID0gInZpZGVvUGxheWVyIjsKICAgICAgICB0aGlzLmxvYWRSZWNvcmRpbmcoMCk7CiAgICAgIH0KICAgIH0sCgogICAgb25EZWxldGVSZWNvcmRpbmcoaW5kZXgpIHsKICAgICAgdGhpcy5yZWNvcmRpbmdzLnNwbGljZShpbmRleCwgMSk7CgogICAgICBpZiAodGhpcy5yZWNvcmRlck1vZGUgPT0gInNpbmdsZSIpIHsKICAgICAgICB0aGlzLmNvbnRyb2xzID0gImxpdmVWaWRlbyI7CiAgICAgIH0KICAgIH0sCgogICAgb25QbGF5ZXJMb2FkZWQoKSB7Ly90aGlzLnBsYXlSZWNvcmRpbmcoKTsKICAgIH0sCgogICAgdmlkZW9SZWNvcmQoKSB7CiAgICAgIHRoaXMuY29udHJvbHMgPSAicmVjb3JkaW5nVmlkZW8iOwogICAgICB0aGlzLiRyZWZzLm11bHRpY29yZGVyLnN0YXJ0VmlkZW9SZWNvcmRpbmcoKTsKICAgIH0sCgogICAgdmlkZW9TbmFwc2hvdChmcm9tVmlldykgewogICAgICB0aGlzLiRyZWZzLm11bHRpY29yZGVyLnZpZGVvU25hcHNob3QoZnJvbVZpZXcpOwogICAgfSwKCiAgICB2aWRlb0Nsb3NlKCkgewogICAgICB0aGlzLiRyZWZzLm11bHRpY29yZGVyLnN0b3BWaWRlbygpOwogICAgICB0aGlzLnZpZXcgPSAidmlkZW8iOwogICAgICB0aGlzLmNvbnRyb2xzID0gImxpdmVWaWRlbyI7CiAgICAgIHRoaXMudmlkZW9Tb3VyY2UgPSBudWxsOwogICAgfSwKCiAgICB2aWRlb1N0b3BSZWNvcmRpbmcoKSB7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIuc3RvcFJlY29yZGluZygpOyAvLyByZXN1bWUgdGhlIHZpZGVvLCBtaW51cyByZWNvcmRpbmcKCiAgICAgIHRoaXMucmVzdW1lKCk7CiAgICB9LAoKICAgIHJlc3VtZSgpIHsKICAgICAgdGhpcy5pc1BhdXNlZCA9IGZhbHNlOwogICAgICB0aGlzLiRyZWZzLm11bHRpY29yZGVyLnJlc3VtZSgpOwogICAgfSwKCiAgICBwYXVzZSgpIHsKICAgICAgdGhpcy5pc1BhdXNlZCA9IHRydWU7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIucGF1c2UoKTsKICAgIH0sCgogICAgY2xvc2VTbmFwc2hvdCgpIHsKICAgICAgdGhpcy4kcmVmcy5tdWx0aWNvcmRlci5jbG9zZVNuYXBzaG90KCk7CiAgICB9LAoKICAgIHNuYXBzaG90RG93bmxvYWQoKSB7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIuZG93bmxvYWRTbmFwc2hvdCgpOwogICAgfSwKCiAgICBkb3dubG9hZFJlY29yZGluZyhpbmRleCkgewogICAgICBpZiAodGhpcy5yZWNvcmRlck1vZGUgPT09ICdzaW5nbGUnKSB7CiAgICAgICAgaW5kZXggPSAwOwogICAgICB9CgogICAgICB0aGlzLiRyZWZzLm11bHRpY29yZGVyLmRvd25sb2FkUmVjb3JkaW5nKGluZGV4KTsKICAgIH0sCgogICAgZGVsZXRlUmVjb3JkaW5nKGluZGV4KSB7CiAgICAgIGlmICh0aGlzLnJlY29yZGVyTW9kZSA9PT0gJ3NpbmdsZScpIHsKICAgICAgICBpbmRleCA9IDA7CiAgICAgIH0KCiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIuZGVsZXRlUmVjb3JkaW5nKGluZGV4KTsKICAgIH0sCgogICAgYXN5bmMgbG9hZFJlY29yZGluZyhpbmRleCkgewogICAgICBhd2FpdCB0aGlzLiRyZWZzLm11bHRpY29yZGVyLmxvYWRSZWNvcmRpbmcoaW5kZXgpOwogICAgfSwKCiAgICBwbGF5UmVjb3JkaW5nKCkgewogICAgICB0aGlzLmlzUGxheWVyUGF1c2VkID0gZmFsc2U7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIucGxheVJlY29yZGluZygpOwogICAgfSwKCiAgICBwYXVzZVBsYXllcigpIHsKICAgICAgdGhpcy5pc1BsYXllclBhdXNlZCA9IHRydWU7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIucGF1c2VQbGF5ZXIoKTsKICAgIH0sCgogICAgcmVzdW1lUGxheWVyKCkgewogICAgICB0aGlzLmlzUGxheWVyUGF1c2VkID0gZmFsc2U7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIucmVzdW1lUGxheWVyKCk7CiAgICB9LAoKICAgIGRlbGV0ZVBsYXllclJlY29yZGluZygpIHsKICAgICAgdGhpcy4kcmVmcy5tdWx0aWNvcmRlci5kZWxldGVQbGF5ZXJSZWNvcmRpbmcoKTsKICAgIH0sCgogICAgY2xvc2VQbGF5ZXIoKSB7CiAgICAgIHRoaXMuJHJlZnMubXVsdGljb3JkZXIuY2xvc2VQbGF5ZXIoKTsKICAgIH0sCgogICAgdG9nZ2xlTXV0ZWQoKSB7CiAgICAgIHRoaXMuaXNNdXRlZCA9ICF0aGlzLmlzTXV0ZWQ7CiAgICB9LAoKICAgIHRvZ2dsZVBsYXllck11dGVkKCkgewogICAgICB0aGlzLmlzUGxheWVyTXV0ZWQgPSAhdGhpcy5pc1BsYXllck11dGVkOwogICAgfQoKICB9Cn07"},{"version":3,"mappings":";;AA+GA;AACA;AACA;AACA,0C,CACA;;AAEA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,WADA;MAEAC;QACA;MACA;IAJA,CADA;IAOAC;MACAF,YADA;MAEAC;IAFA;EAPA,CALA;;EAiBAE;IACA;MACAC,cADA;MAEAC,iBAFA;MAGAC,mBAHA;MAIAC,eAJA;MAKAC,qBALA;MAMAC,aANA;MAOAC,mBAPA;MAQAC,aARA;MASAC,cATA,CASA;;IATA;EAWA,CA7BA;;EA8BAC;IACAC;MACAC;IACA,CAHA;;IAIAC;MACAD;MACA;AACA;AACA;AACA;AACA;AACA;;MACA;IACA,CAbA;;IAcAE;MACA;IACA,CAhBA;;IAiBAC;MACA;IACA,CAnBA;;IAoBAC;MACA;;MACA;QACA;QACA;QACA;MACA;IACA,CA3BA;;IA4BAC;MACA;;MACA;QACA;MACA;IACA,CAjCA;;IAkCAC,kBACA;IACA,CApCA;;IAqCAC;MACA;MACA;IACA,CAxCA;;IAyCAC;MACA;IACA,CA3CA;;IA4CAC;MACA;MACA;MACA;MACA;IACA,CAjDA;;IAkDAC;MACA,uCADA,CAEA;;MACA;IACA,CAtDA;;IAuDAC;MACA;MACA;IACA,CA1DA;;IA2DAC;MACA;MACA;IACA,CA9DA;;IA+DAC;MACA;IACA,CAjEA;;IAkEAC;MACA;IACA,CApEA;;IAqEAC;MACA;QACAC;MACA;;MACA;IACA,CA1EA;;IA2EAC;MACA;QACAD;MACA;;MACA;IACA,CAhFA;;IAiFA;MACA;IACA,CAnFA;;IAoFAE;MACA;MACA;IACA,CAvFA;;IAwFAC;MACA;MACA;IACA,CA3FA;;IA4FAC;MACA;MACA;IACA,CA/FA;;IAgGAC;MACA;IACA,CAlGA;;IAmGAC;MACA;IACA,CArGA;;IAsGAC;MACA;IACA,CAxGA;;IAyGAC;MACA;IACA;;EA3GA;AA9BA","names":["name","components","Multicorder","props","videoTypes","type","default","recorderMode","data","controls","videoSource","videoSourceList","isPaused","isPlayerPaused","isMuted","isPlayerMuted","view","recordings","methods","onError","console","onCameras","onVideoLive","onViewChange","onNewRecording","onDeleteRecording","onPlayerLoaded","videoRecord","videoSnapshot","videoClose","videoStopRecording","resume","pause","closeSnapshot","snapshotDownload","downloadRecording","index","deleteRecording","playRecording","pausePlayer","resumePlayer","deletePlayerRecording","closePlayer","toggleMuted","togglePlayerMuted"],"sourceRoot":"node_modules/multicorder/vuetify_ui/src/components","sources":["MulticorderUI.vue"],"sourcesContent":["<template>\n  <v-container class=\"text-center  ma-0 pa-0\">\n    <v-row class=\"text-center \">\n      <v-col cols=\"12\">\n        <div class=\"videobox\">\n          <Multicorder \n            :video-source=\"videoSource\"\n            @error=\"onError\"\n            @cameras=\"onCameras\"\n            @video-live=\"onVideoLive\"\n            @view-change=\"onViewChange\"\n            @new-recording=\"onNewRecording\"\n            @delete-recording=\"onDeleteRecording\"\n            @player-loaded=\"onPlayerLoaded\"\n            ref=\"multicorder\"\n            :videoTypes=\"videoTypes\"\n            :recorderMode=\"recorderMode\"\n          />\n        </div>\n        <v-select\n          v-if=\"videoSource == null\"\n          v-show=\"view == 'video'\"\n          :items=\"videoSourceList\"\n          :return-object=\"true\"\n          v-model=\"videoSource\"\n          label=\"Select video input\"\n        />\n        <div\n          v-if=\"videoSource\"\n          align=\"right\"\n          background-color=\"black\"\n          class=\"grey--text videobox\"\n        >\n          {{ videoSource.text }}\n          <v-icon @click=\"videoClose\" color=\"grey\">mdi-close-circle</v-icon>\n        </div>\n\n\n\n        <v-row v-show=\"view == 'videoPlayer'\" class=\"text-center  mt-3 pt-0\">\n          <v-col cols=\"auto\" align=\"left\">\n            <v-icon class=\"mx-2\" large color=\"red\" v-if=\"!isPlayerMuted\" @click=\"togglePlayerMuted\"\n              >mdi-speaker</v-icon\n            >\n            <v-icon class=\"mx-2\" large v-if=\"isPlayerMuted\" @click=\"togglePlayerMuted\"\n              >mdi-speaker-off</v-icon\n            >\n          </v-col>\n          <v-col align=\"center\">\n            <v-btn class=\"mx-2\" @click=\"playRecording\" fab mdi-icon x-small light\n              ><v-icon x-large color=\"red\">mdi-play-circle</v-icon></v-btn\n            >\n            <v-btn class=\"mx-2\" @click=\"downloadRecording\" fab mdi-icon x-small light\n              ><v-icon x-large>mdi-download-circle</v-icon></v-btn\n            >\n            <v-btn class=\"mx-2\" @click=\"deleteRecording\" fab mdi-icon x-small light\n              ><v-icon x-large color=\"red\">mdi-delete-circle</v-icon></v-btn\n            >\n          </v-col>\n          <v-col cols=\"auto\" align=\"right\">\n            <v-icon x-large @click=\"videoSnapshot(view)\" color=\"teal\">mdi-camera</v-icon>\n          </v-col>\n        </v-row>\n\n\n\n\n\n        <v-row v-show=\"view == 'video' && videoSource != null\">\n          <v-col  cols=\"auto\" align=\"center\">\n            <v-icon large color=\"red\" v-if=\"!isMuted\" @click=\"toggleMuted\"\n              >mdi-microphone</v-icon\n            >\n            <v-icon large v-if=\"isMuted\" @click=\"toggleMuted\">mdi-microphone-off</v-icon>\n          </v-col>\n          <v-col align=\"center\">\n            <v-btn v-show=\"controls == 'liveVideo'\" class=\"mx-2\" @click=\"videoRecord\" fab mdi-icon x-small light\n              ><v-icon x-large color=\"red\">mdi-record-circle</v-icon></v-btn\n            >\n            <v-btn v-show=\"controls == 'recordingVideo'\" class=\"mx-2\" @click=\"videoStopRecording\" fab mdi-icon x-small light\n              ><v-icon x-large color=\"red\">mdi-stop-circle</v-icon></v-btn\n            >\n            <v-btn v-show=\"controls == 'recordingVideo'\" class=\"mx-2\" @click=\"pause\" fab mdi-icon x-small light v-if=\"!isPaused\"\n              ><v-icon x-large>mdi-pause-circle</v-icon></v-btn\n            >\n            <v-btn v-show=\"controls == 'recordingVideo'\" class=\"mx-2\" @click=\"resume\" fab mdi-icon x-small dark v-if=\"isPaused\"\n              ><v-icon x-large>mdi-pause-circle</v-icon></v-btn\n            >\n          </v-col>\n          <v-col  cols=\"auto\" align=\"center\">\n            <v-icon x-large @click=\"videoSnapshot(view)\" color=\"teal\">mdi-camera</v-icon>\n          </v-col>\n        </v-row>\n\n        <v-row v-show=\"view == 'snapshot'\">\n          <v-col>\n            <v-btn class=\"mx-2\" @click=\"closeSnapshot()\" fab mdi-icon x-small light\n              ><v-icon x-large color=\"red\">mdi-close-circle</v-icon></v-btn\n            >\n            <v-btn class=\"mx-2\" @click=\"snapshotDownload\" fab mdi-icon x-small light\n              ><v-icon x-large>mdi-download-circle</v-icon></v-btn\n            >\n          </v-col>\n        </v-row>\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n/**\n * For Hot reload load the `*.vue` files from the parent `/src/` directly.\n */\nimport { Multicorder } from \"multicorder\";\n// import { Multicorder } from \"../../../src/lib-components/index.js\";\n\nexport default {\n  name: \"MulticorderUI\",\n  components: {\n    Multicorder,\n  },\n  props: {\n    videoTypes: {\n      type: Array,\n      default: () => {\n        return [\"camera\", \"screen\"];\n      },\n    },\n    recorderMode: {\n      type: String,\n      default: \"single\",\n    },\n  },\n  data() {\n    return {\n      controls: null,\n      videoSource: null,\n      videoSourceList: [],\n      isPaused: false,\n      isPlayerPaused: false,\n      isMuted: true,\n      isPlayerMuted: true,\n      view: \"video\",\n      recordings: [], // local sparsed list of recording data\n    };\n  },\n  methods: {\n    onError(error) {\n      console.log(\"Error emitted\", error);\n    },\n    onCameras(cameras) {\n      console.log(\"Available cameras\", cameras);\n      /**\n       * We are implementing a `multicorder` with camera and screen support.\n       * We need to create a list that groups the items for a `v-select` component.\n       * We use the `listFromCameras` helper function provided by the component.\n       * The Multicorder component maintains a list of `cameras` if we need them independently.\n       */\n      this.videoSourceList = this.$refs.multicorder.listFromCameras(cameras);\n    },\n    onVideoLive() {\n      this.controls = \"liveVideo\";\n    },\n    onViewChange(view) {\n      this.view = view;\n    },\n    onNewRecording(recording) {\n      this.recordings.push(recording);\n      if (this.recorderMode == \"single\") {\n        // Load the video into the player and force disposition\n        // this.view = \"videoPlayer\";\n        this.loadRecording(0);\n      }\n    },\n    onDeleteRecording(index) {\n      this.recordings.splice(index, 1);\n      if (this.recorderMode == \"single\") {\n        this.controls = \"liveVideo\"  \n      }\n    },\n    onPlayerLoaded() {\n      //this.playRecording();\n    },\n    videoRecord() {\n      this.controls = \"recordingVideo\";\n      this.$refs.multicorder.startVideoRecording();\n    },\n    videoSnapshot(fromView) {\n      this.$refs.multicorder.videoSnapshot(fromView);\n    },\n    videoClose() {\n      this.$refs.multicorder.stopVideo();\n      this.view = \"video\";\n      this.controls = \"liveVideo\";\n      this.videoSource = null;\n    },\n    videoStopRecording() {\n      this.$refs.multicorder.stopRecording();\n      // resume the video, minus recording\n      this.resume();\n    },\n    resume() {\n      this.isPaused = false;\n      this.$refs.multicorder.resume();\n    },\n    pause() {\n      this.isPaused = true;\n      this.$refs.multicorder.pause();\n    },\n    closeSnapshot() {\n      this.$refs.multicorder.closeSnapshot();\n    },\n    snapshotDownload() {\n      this.$refs.multicorder.downloadSnapshot();\n    },\n    downloadRecording(index) {\n      if(this.recorderMode === 'single') {\n        index = 0;\n      }\n      this.$refs.multicorder.downloadRecording(index);\n    },\n    deleteRecording(index) {\n      if(this.recorderMode === 'single') {\n        index = 0;\n      }\n      this.$refs.multicorder.deleteRecording(index);\n    },\n    async loadRecording(index) {\n      await this.$refs.multicorder.loadRecording(index);\n    },\n    playRecording() {\n      this.isPlayerPaused = false;\n      this.$refs.multicorder.playRecording();\n    },\n    pausePlayer() {\n      this.isPlayerPaused = true;\n      this.$refs.multicorder.pausePlayer();\n    },\n    resumePlayer() {\n      this.isPlayerPaused = false;\n      this.$refs.multicorder.resumePlayer();\n    },\n    deletePlayerRecording() {\n      this.$refs.multicorder.deletePlayerRecording();\n    },\n    closePlayer() {\n      this.$refs.multicorder.closePlayer();\n    },\n    toggleMuted() {\n      this.isMuted = !this.isMuted;\n    },\n    togglePlayerMuted() {\n      this.isPlayerMuted = !this.isPlayerMuted;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.videobox {\n  background-color: black;\n}\n</style>\n"]}]}